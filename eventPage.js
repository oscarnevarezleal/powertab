// Generated by CoffeeScript 1.6.2
(function() {
  var PageEvents, currentTab, instance, onClickHandler;

  currentTab = null;

  PageEvents = (function() {
    function PageEvents() {}

    PageEvents.prototype.setCurrentTab = function(tab) {
      return chrome.tabs.update(tab.id, {
        active: true
      });
    };

    PageEvents.prototype.duplicateTab = function(contextData) {
      return chrome.tabs.create({
        url: contextData.pageUrl
      });
    };

    PageEvents.prototype.newTab = function(contextData) {
      return chrome.tabs.create({
        url: contextData.linkUrl
      });
    };

    PageEvents.prototype.closeTabsToTheLeft = function(currentTab, contextData) {
      return chrome.tabs.query({
        active: false
      }, function(tabs) {
        var i, tab, _i, _len, _results;

        _results = [];
        for (i = _i = 0, _len = tabs.length; _i < _len; i = ++_i) {
          tab = tabs[i];
          if (tab.index < currentTab.index) {
            _results.push(chrome.tabs.remove(tab.id));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      });
    };

    PageEvents.prototype.closeTabsToTheRight = function(currentTab, contextData) {
      return chrome.tabs.query({
        active: false
      }, function(tabs) {
        var i, tab, _i, _len, _results;

        _results = [];
        for (i = _i = 0, _len = tabs.length; _i < _len; i = ++_i) {
          tab = tabs[i];
          if (tab.index > currentTab.index) {
            _results.push(chrome.tabs.remove(tab.id));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      });
    };

    PageEvents.prototype.clipboardTabUrls = function() {
      var text;

      text = "";
      chrome.tabs.query({
        active: false
      }, function(tabs) {
        var i, tab, _i, _len;

        for (i = _i = 0, _len = tabs.length; _i < _len; i = ++_i) {
          tab = tabs[i];
          console.log(tab.url);
          text += tab.url + "\t";
        }
        return chrome.tabs.query({
          active: true
        }, function(tabs) {
          var copyDiv, _j, _len1;

          for (i = _j = 0, _len1 = tabs.length; _j < _len1; i = ++_j) {
            tab = tabs[i];
            console.log(tab.url);
            text += tab.url + "\t";
          }
          console.log("Final clipboard content = (" + text + ")");
          copyDiv = document.createElement('div');
          copyDiv.contentEditable = true;
          document.body.appendChild(copyDiv);
          copyDiv.innerHTML = text;
          copyDiv.unselectable = "off";
          copyDiv.focus();
          document.execCommand('SelectAll');
          document.execCommand("Copy", false, null);
          return document.body.removeChild(copyDiv);
        });
      });
      return true;
    };

    return PageEvents;

  })();

  instance = new PageEvents();

  onClickHandler = function(info, Tab) {
    chrome.tabs.getCurrent(function(Tab) {});
    currentTab = Tab;
    switch (info.menuItemId) {
      case 'newtab':
        return instance.newTab(info) || instance.setCurrentTab(currentTab);
      case 'duplicate':
        return instance.duplicateTab(info);
      case 'closelefttabs':
        return instance.closeTabsToTheLeft(currentTab, info);
      case 'closerighttabs':
        return instance.closeTabsToTheRight(currentTab, info);
      case 'copyurltabs':
        return instance.clipboardTabUrls();
    }
  };

  chrome.contextMenus.onClicked.addListener(onClickHandler);

  chrome.runtime.onInstalled.addListener(function() {
    chrome.contextMenus.create({
      contexts: ["link"],
      title: "Open in background tab",
      id: "newtab"
    });
    chrome.contextMenus.create({
      contexts: ["page"],
      title: "Duplicate this tab",
      id: "duplicate"
    });
    chrome.contextMenus.create({
      contexts: ["page"],
      title: "Close tabs to the left",
      id: "closelefttabs"
    });
    return chrome.contextMenus.create({
      contexts: ["page"],
      title: "Copy tabs urls",
      id: "copyurltabs"
    });
  });

  this.pageEvents = instance;

}).call(this);

/*
//@ sourceMappingURL=eventPage.map
*/
